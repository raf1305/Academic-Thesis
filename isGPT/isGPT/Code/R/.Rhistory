balancing = NULL;
#fScheme   = "_comb_pseAAC";
fScheme = "_nGram";
amins = c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y");
nTrainingSet = read.csv('trainingset.csv')
nTestSet = read.csv('testingset.csv')
cat(as.character(Sys.time()),">> Training set entries:", length(nTrainingSet[,1]), "\n");
cat(as.character(Sys.time()),">> Test set entries:", length(nTestSet[,1]), "\n");
nTrain = length(nTrainingSet[,1])
nTest = length(nTestSet[,1])
cat(nTrain," ", nTest,"\n");
# File names #
fileNameSuffix = paste(fScheme, balancing, ".rds", sep = "");
rankedFeaturesFile = paste("ff"            , fileNameSuffix, sep = "");
# featureFile        = paste("featurized",fileNameSuffix,sep = "");
featureFile        = paste("featurized",fileNameSuffix,sep = "");
#testFeatureFile    = paste("testFeaturized", fScheme,"131415gapdc",".rds", sep = "");
svmFile            = paste("svm"           , fileNameSuffix, sep = "");
rfmodelFile        = paste("rfmodel"       , fileNameSuffix, sep = "");
rankedFeatureNames = "rankedFeatureNames.rds";
outFile            = paste("out", fScheme, balancing, ".csv", sep = "");
cat(as.character(Sys.time()),">> Featurizing ...\n");
if (!file.exists(featureFile)) {
alldata = rbind(nTrainingSet, nTestSet)
featurizeddata = featurization(alldata$Sequence, alldata$Class, amins, nGramOrder = 3, nGDipOrder = 15, psfOrder = 3);
features = featurizeddata[1:nTrain,];
#testFeatures = featurizeddata[(nTrain+1):(nTrain+nTest),];
saveRDS(features, featureFile);
#saveRDS(testFeatures, testFeatureFile);
cat(as.character(Sys.time()),">> Done.\n");
} else {
features = readRDS(featureFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", featureFile, ")\n");
#testFeatures = readRDS(testFeatureFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", testFeatureFile, ")\n");
}
cat(as.character(Sys.time()),">> Total features: ", length(features[1,]), "\n");
if (!file.exists(rankedFeaturesFile)) {
cat(as.character(Sys.time()),">> Computing random forest ...\n");
if (!file.exists(rfmodelFile)) {
rfmodel = randomForest(protection ~ ., features[1:nTrain,], importance=TRUE);
saveRDS(rfmodel, rfmodelFile);
cat(as.character(Sys.time()),">> Done.\n");
} else {
rfmodel = readRDS(rfmodelFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", rfmodelFile, ")\n");
}
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
rankedFeatures = rownames(rfmodel$importance[order(-rfmodel$importance[,3]),])
saveRDS(rankedFeatures,rankedFeatureNames);
cat(as.character(Sys.time()),">> Done\n");
} else {
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
rankedFeatures = readRDS(rankedFeaturesFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", rankedFeaturesFile, ")\n");
}
library(e1071)
library(ROCR)
library(randomForest)
source('featurization.R');
source('featurefiltering.R');
timestamp();
##------ Thu Jan 30 14:43:57 2020 ------##
set.seed(10);
#balancing = "_SMOTED";
balancing = NULL;
#fScheme   = "_comb_pseAAC";
fScheme = "_nGram";
amins = c("A", "C", "D", "E", "F", "G", "H", "I", "K", "L", "M", "N", "P", "Q", "R", "S", "T", "V", "W", "Y");
nTrainingSet = read.csv('trainingset.csv')
nTestSet = read.csv('testingset.csv')
cat(as.character(Sys.time()),">> Training set entries:", length(nTrainingSet[,1]), "\n");
cat(as.character(Sys.time()),">> Test set entries:", length(nTestSet[,1]), "\n");
nTrain = length(nTrainingSet[,1])
nTest = length(nTestSet[,1])
cat(nTrain," ", nTest,"\n");
# File names #
fileNameSuffix = paste(fScheme, balancing, ".rds", sep = "");
rankedFeaturesFile = paste("ff"            , fileNameSuffix, sep = "");
# featureFile        = paste("featurized",fileNameSuffix,sep = "");
featureFile        = paste("featurized",fileNameSuffix,sep = "");
#testFeatureFile    = paste("testFeaturized", fScheme,"131415gapdc",".rds", sep = "");
svmFile            = paste("svm"           , fileNameSuffix, sep = "");
rfmodelFile        = paste("rfmodel"       , fileNameSuffix, sep = "");
rankedFeatureNames = "rankedFeatureNames.rds";
outFile            = paste("out", fScheme, balancing, ".csv", sep = "");
cat(as.character(Sys.time()),">> Featurizing ...\n");
if (!file.exists(featureFile)) {
alldata = rbind(nTrainingSet, nTestSet)
featurizeddata = featurization(alldata$Sequence, alldata$Class, amins, nGramOrder = 3, nGDipOrder = 15, psfOrder = 3);
features = featurizeddata[1:nTrain,];
#testFeatures = featurizeddata[(nTrain+1):(nTrain+nTest),];
saveRDS(features, featureFile);
#saveRDS(testFeatures, testFeatureFile);
cat(as.character(Sys.time()),">> Done.\n");
} else {
features = readRDS(featureFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", featureFile, ")\n");
#testFeatures = readRDS(testFeatureFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", testFeatureFile, ")\n");
}
cat(as.character(Sys.time()),">> Total features: ", length(features[1,]), "\n");
if (!file.exists(rankedFeaturesFile)) {
cat(as.character(Sys.time()),">> Computing random forest ...\n");
if (!file.exists(rfmodelFile)) {
rfmodel = randomForest(protection ~ ., features[1:nTrain,], importance=TRUE);
saveRDS(rfmodel, rfmodelFile);
cat(as.character(Sys.time()),">> Done.\n");
} else {
rfmodel = readRDS(rfmodelFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", rfmodelFile, ")\n");
}
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
rankedFeatures = rownames(rfmodel$importance[order(-rfmodel$importance[,3]),])
saveRDS(rankedFeatures,rankedFeatureNames);
cat(as.character(Sys.time()),">> Done\n");
} else {
cat(as.character(Sys.time()),">> Computing feature ranking ...\n");
rankedFeatures = readRDS(rankedFeaturesFile);
cat(as.character(Sys.time()),">> Done ( from cached file:", rankedFeaturesFile, ")\n");
}
library("rio");
install.packages("rio")
library(rio)
s = import("rfmodel_nGrams.rds");
e
export(s,"rfmodel_nGrams.xlsx");
s = readRDS("rfmodel_nGrams.rds");
View(s)
n = NULL;
print(length(n));
files = list.files(pattern = "^featurized.*\.rds$")'
files = list.files(pattern = "^featurized.*.rds$");
print(files);
files = list.files(pattern = "^featurized_[0-9]*.rds$")
print(files);
files = list.files(pattern = "^featurized_[0-9].rds$")
print(files);
files = list.files(pattern = "^featurized_\d*.rds$")
rankedFeatureNames = readRDS("rankedFeatureNames.rds")
files = list.files(pattern = "^featurized_[0-9]*.rds$")
print(files);
files = list.files(pattern = "^featurized_[0-9][0-9].rds$")
print(files);
files = list.files(pattern = "^featurized_.*.rds$")
print(files);
files = list.files(pattern = "^featurized_.rds$")
print(files);
files = list.files(pattern = "^featurized_[0-9]*.*.rds$")
print(files);
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
print(files);
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = NULL;
for (file in files)
{
f = readRDS(file);
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = NULL;
for (file in files)
{
cat(file,"\n");
f = readRDS(file);
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = file[1];
for (file in files[2:])
{
cat(file,"\n");
f = readRDS(file);
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = file[1];
print(files[-1])
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = file[1];
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
View(data)
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
View(data)
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
featureFileNames =  c(
"featurized_nGDip"
#"featurized_nGrams",
#"featurized_PSF"
#"featurized_pssm_nGDip25"
);
for (featureFileName in featureFileNames) {
inputFileName  = paste(featureFileName, ".rds", sep="");
outputFileName = paste(featureFileName, ".csv", sep="");
cat(as.character(Sys.time()),">> Reading file", inputFileName, " ...\n");
t = readRDS(inputFileName);
cat(as.character(Sys.time()),">> Done.\n");
cat(as.character(Sys.time()),">> Writing file", outputFileName, " ...\n");
write.csv(t, outputFileName, row.names = FALSE);
cat(as.character(Sys.time()),">> Done.\n");
}
featureFileNames =  c(
"featurized_nGDip_SMOTED"
# "featurized_nGrams_SMOTED",
# "featurized_psf_SMOTED"
);
for (featureFileName in featureFileNames) {
inputFileName  = paste(featureFileName, ".csv", sep="");
outputFileName = paste(featureFileName, ".rds", sep="");
cat(as.character(Sys.time()),">> Reading file", inputFileName, " ...\n");
t = read.csv(inputFileName);
cat(as.character(Sys.time()),">> Done.\n");
cat(as.character(Sys.time()),">> Writing file", outputFileName, " ...\n");
saveRDS(t, outputFileName);
cat(as.character(Sys.time()),">> Done.\n");
}
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_nGDip.rds");
setwd("C:/Users/ASUS/Desktop/NewDataset/isGPT/Code/R/temp/temp")
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
print(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
f =readRDS("testFeaturized_nGDip.rds")'
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
data = readRDS(file[1]);
View(f)
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
data = readRDS(file[1]);
nGrams.rds
rm(list = ls())
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
f = readRDS("testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
f = readRDS("testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[^0-9]*.*.rds$")
cat(files);
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
f = readRDS("testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_nGDip.rds");
f = readRDS("testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_comb.rds");
f = readRDS("testFeaturized_nGDip.rds");
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
f = readRDS("testFeaturized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_comb.rds");
f = readRDS("testFeaturized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
f = readRDS("featurized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(file[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
data = readRDS(file[1]);
View(data)
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
files = list.files(pattern = "^featurized_[0-9]*.*.rds$")
cat(files);
data = readRDS(file[1]);
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
cat(files);
data = readRDS(file[1]);
data = readRDS(file[1]);
print(file[1]);
files = list.files(pattern = "^featurized_[0-9]+.*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
f = readRDS("featurized_comb.rds");
files = list.files(pattern = "^testFeaturized_[0-9]+.*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
f = readRDS("featurized_comb.rds");
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_comb.rds");
f = readRDS("testFeaturized_comb.rds");
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
cat(files);
files = list.files(pattern = "^testFeaturized_[^0-9].*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"testFeaturized_comb.rds");
f = readRDS("testFeaturized_comb.rds");
f = readRDS("featurized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
f = readRDS("featurized_comb.rds");
files = list.files(pattern = "^featurized_[^0-9].*.rds$")
cat(files);
data = readRDS(files[1]);
for (file in files[-1])
{
cat(file,"\n");
f = readRDS(file);
f$protection = NULL;
data = cbind(data,f);
}
saveRDS(data,"featurized_comb.rds");
f = readRDS("featurized_comb.rds");
f = readRDS("testFeaturized_comb.rds");
setwd("~/GitHub/isGPT/Code/R")
f = readRDS("testFeaturized_comb.rds");
c = readRDS("featurized_comb.rds")'
c = readRDS("featurized_comb.rds");
''
c = readRDS("featurized_comb.rds");
c = readRDS("featurized_comb_SMOTED.rds");
e = readRDS("rankedFeatures.rds");
